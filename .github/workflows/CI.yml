name: CI

on:
  push:
    branches: [main, develop, preview]
  pull_request:
    types: [opened, synchronize]

env:
  NEXT_TELEMETRY_DISABLED: 1

jobs:
  lint:
    name: ⬣ ESLint, Type Check, and Prettier
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4

      - name: ⎔ Setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: "npm"

      - name: 📥 Install dependencies
        run: npm ci --prefer-offline

      - name: 💅 Prettier check
        run: npm run format:check

      - name: 🔍 Type check
        run: npm run type-check

  test:
    name: ⚡ Test
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4

      - name: ⎔ Setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: "npm"

      - name: 📥 Install dependencies
        run: npm ci --prefer-offline

      - name: 🧪 Run tests
        run: npm run test

      - name: 📊 Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/
          retention-days: 30

  build:
    name: 🏗️ Build
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4

      - name: ⎔ Setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: "npm"

      - name: 📥 Install dependencies
        run: npm ci --prefer-offline

      - name: 💾 Cache Next.js build
        uses: actions/cache@v4
        with:
          path: |
            .next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-

      - name: 👷 Build
        run: npm run build

      - name: 📤 Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: .next/
          retention-days: 1

  security:
    name: 🔒 Security Check
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4

      - name: 🔍 Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high

  e2e:
    name: 🧪 E2E Tests
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4

      - name: ⎔ Setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: "npm"

      - name: 📥 Install dependencies
        run: npm ci --prefer-offline

      - name: ⚙️ Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: 📥 Install Playwright
        run: npx playwright install

      - name: 🎭 Run Playwright tests
        run: npm run test:e2e

      - name: 📊 Upload Playwright report
        uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
